// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGECOREDAO.CONTEXTOS;

namespace SGECOREDAO.Migrations
{
    [DbContext(typeof(SGECORECONTEXT))]
    partial class SGECORECONTEXTModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGECOREDOMINIO.Desocupacao", b =>
                {
                    b.Property<int>("Id_Desocupacao")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data_Hora_Saida")
                        .HasColumnName("DATA_SAIDA");

                    b.Property<int>("setId")
                        .HasColumnName("ID_SETOR_DESO");

                    b.Property<int>("vagId")
                        .HasColumnName("ID_VAGA_DESO");

                    b.Property<int>("veiId")
                        .HasColumnName("ID_VEICULO_DESO");

                    b.HasKey("Id_Desocupacao");

                    b.HasIndex("setId");

                    b.HasIndex("vagId");

                    b.HasIndex("veiId");

                    b.ToTable("DES_DESOCUPACAO");
                });

            modelBuilder.Entity("SGECOREDOMINIO.Ocupacao", b =>
                {
                    b.Property<int>("Id_Ocup")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data_Hora_Entrada")
                        .HasColumnName("DATA_ENTRADA");

                    b.Property<int>("setId")
                        .HasColumnName("ID_SETOR_OCU");

                    b.Property<int>("vagId")
                        .HasColumnName("ID_VAGA_OCU");

                    b.Property<int>("veiId")
                        .HasColumnName("ID_VEICULO_OCU");

                    b.HasKey("Id_Ocup");

                    b.HasIndex("setId");

                    b.HasIndex("vagId");

                    b.HasIndex("veiId");

                    b.ToTable("OCU_OCUPACAO");
                });

            modelBuilder.Entity("SGECOREDOMINIO.Setor", b =>
                {
                    b.Property<int>("Id_Setor")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome_Setor")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_Setor");

                    b.ToTable("SET_SETOR");
                });

            modelBuilder.Entity("SGECOREDOMINIO.Vagas", b =>
                {
                    b.Property<int>("Id_Vaga")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Numero_Vaga")
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("setId")
                        .HasColumnName("ID_SETOR");

                    b.HasKey("Id_Vaga");

                    b.HasIndex("setId");

                    b.ToTable("VAG_VAGA");
                });

            modelBuilder.Entity("SGECOREDOMINIO.Veiculo", b =>
                {
                    b.Property<int>("Id_Veiculo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Placa_Veic")
                        .HasColumnName("PLC_VEICULO")
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id_Veiculo");

                    b.ToTable("VEIC_VEICULO");
                });

            modelBuilder.Entity("SGECOREDOMINIO.Desocupacao", b =>
                {
                    b.HasOne("SGECOREDOMINIO.Setor", "Setor")
                        .WithMany("Desocupacoes")
                        .HasForeignKey("setId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGECOREDOMINIO.Vagas", "Vaga")
                        .WithMany("Desocupacoes")
                        .HasForeignKey("vagId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SGECOREDOMINIO.Veiculo", "Veiculo")
                        .WithMany("Desocupacoes")
                        .HasForeignKey("veiId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SGECOREDOMINIO.Ocupacao", b =>
                {
                    b.HasOne("SGECOREDOMINIO.Setor", "Setor")
                        .WithMany("Ocupacoes")
                        .HasForeignKey("setId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGECOREDOMINIO.Vagas", "Vaga")
                        .WithMany("Ocupacoes")
                        .HasForeignKey("vagId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SGECOREDOMINIO.Veiculo", "Veiculo")
                        .WithMany("Ocupacoes")
                        .HasForeignKey("veiId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SGECOREDOMINIO.Vagas", b =>
                {
                    b.HasOne("SGECOREDOMINIO.Setor", "Setor")
                        .WithMany("Vagas")
                        .HasForeignKey("setId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
